/*
 * _pargresql_library.h
 *
 * Copyright (c) 2012 Mikhail Zymbler, Constantin Pan, Alexey Koltakov
 */

#ifndef _PARGRESQL_LIBRARY_H_
#define _PARGRESQL_LIBRARY_H_

#include "_pargresql_memory_manager.h"

typedef struct {
	int blockNumber;
	void *buf;
} _pargresql_request_t;

/*
 * Данная функция открывает доступ к разделяемой памяти.
 * Никакие другие функции библиотеки обменов сообщениями не могут быть вызваны
 * до вызова данной функции.
 */
extern void _pargresql_InitLib();

/*
 * Данная функция помещает в свободный блок разделяемой памяти
 * сообщение buf размера size. Возврат из функции гарантирует,
 * что сообщение помещено в разделяемую память, но не гарантирует,
 * что сообщение отправлено процессу-получателю.
 * Параметр dst содержит адрес процесса-получателя(номер узла).
 * Параметр request позволяет определить текущее состояние сообщения.
 */
extern void _pargresql_ISend(int dst, uuid_t port, int size, void *buf, _pargresql_request_t *request);

/*
 * Данная функция определяет размер пришедшего сообщения.
 * Если сообщение пришло, в параметре size возвращается его размер,
 * а в параметре flag - 1, в противном случае в параметре flag возвращается 0.
 * Параметр dst содержит адрес процесса-получателя(номер узла).
 * Параметр port позволяет отличить, какому оператору exchange
 * в каком из текущих сеансов отправляется сообщение.
 */
extern void _pargresql_IProbe(int dst, uuid_t port, int *flag, int *size);

/*
 * Данная функция помещает в свободный блок разделяемой памяти
 * запрос на получение сообщения в буфер buf размера size. Возврат из функции
 * гарантирует, что запрос был помещен в разделяемую память,
 * но не гарантирует, что сообщение получено и размещено в буфере buf.
 * Параметр src содержит адрес процесса-отправителя(номер узла).
 * Параметр request позволяет определить текущее состояние сообщения.
 */
extern void _pargresql_IRecv(int src, uuid_t port, int size, void *buf, _pargresql_request_t *request);

/*
 * Данная функция выполняет проверку состояния сообщения, ассоциированного
 * в идентификатором request. Если соответствующее сообщение обработано,
 * в параметре flag возвращается 1, иначе - 0.
 */
extern void _pargresql_Test(_pargresql_request_t *request, int *flag);


/*
 * Данная функция возвращает номер текущего узла.
 */
extern int _pargresql_GetNode(void);

/*
 * Данная функция возвращает общее количество узлов.
 */
extern int _pargresql_GetNodesCount(void);

/*
 * Данная функция завершает работу с разделяемой памятью.
 * Все последующие обращения к любым функциям библиотеки запрещены.
 * К моменту вызова данной функции некоторым процессом все действия,
 * требующие его участия в обмене сообщениями, должны быть завершены.
 */
extern void _pargresql_FinalizeLib(void);

#endif /* _PARGRESQL_LIBRARY_H_ */
